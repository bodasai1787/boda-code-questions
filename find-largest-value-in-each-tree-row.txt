/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, vector<int>& ans, int si){
        if(root == NULL){
            return ;
        }
        else{
            int lastIndex = ans.size()-1;
            if(si>lastIndex){
               ans.push_back(root->val);
            }
            else{
                ans[si] = max(root->val,ans[si]);
            }
            helper(root->right, ans, si+1);
            helper(root->left, ans, si+1);
        }
    }
    vector<int> largestValues(TreeNode* root) {
        vector<int> ans;
        helper(root,ans,0);
        return ans;
    }
};